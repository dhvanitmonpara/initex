{{#if ts}}
import * as authAdapter from "@/adapters/auth.adapter";
import { User } from "@/common/types/IUser";
{{else}}
import * as authAdapter from "../../adapters/auth.adapter.js";
{{/if}}

export const findById = async ({{#if ts}}userId: string{{else}}userId{{/if}}) => {
  return await authAdapter.findById(userId);
}

export const updateRefreshToken = async ({{#if ts}}user: User, refreshToken: string{{else}}user, refreshToken{{/if}}) => {
  return await authAdapter.updateRefreshToken(user, refreshToken);
}

export const findByEmail = async ({{#if ts}}email: string{{else}}email{{/if}}) => {
  return await authAdapter.findByEmail(email);
}

export const create = async ({{#if ts}}user: Partial<User>{{else}}user{{/if}}) => {
  return await authAdapter.create(user);
}

export const findByUsername = async ({{#if ts}}username: string{{else}}username{{/if}}) => {
  return await authAdapter.findByUsername(username);
}

export const searchUsers = async ({{#if ts}}query: string{{else}}query{{/if}}) => {
  return await authAdapter.searchUsers(query);
}